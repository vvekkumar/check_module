[{"C:\\Users\\User\\desktop\\camera\\src\\index.js":"1","C:\\Users\\User\\desktop\\camera\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Desktop\\camera\\src\\index.js":"3","C:\\Users\\User\\Desktop\\camera\\src\\reportWebVitals.js":"4","C:\\Users\\User\\Desktop\\camera\\src\\components\\camera.js":"5","C:\\Users\\User\\Desktop\\camera\\src\\App.js":"6","C:\\Users\\User\\Desktop\\camera\\src\\components\\GuardedRoute.js":"7","C:\\Users\\User\\Desktop\\camera\\src\\components\\userPayment.js":"8","C:\\Users\\User\\Desktop\\camera\\src\\components\\header.js":"9","C:\\Users\\User\\Desktop\\camera\\src\\components\\login\\Login.js":"10","C:\\Users\\User\\Desktop\\camera\\src\\components\\ExternalSoftware\\ExternalSoftware.js":"11","C:\\Users\\User\\Desktop\\camera\\src\\components\\Dashboard\\Dashboard.js":"12","C:\\Users\\User\\Desktop\\camera\\src\\components\\Payment\\Payment.js":"13","C:\\Users\\User\\Desktop\\camera\\src\\components\\Report\\report.js":"14","C:\\Users\\User\\Desktop\\camera\\src\\components\\Print\\Print.js":"15","C:\\Users\\User\\Desktop\\camera\\src\\components\\organization\\organization.js":"16","C:\\Users\\User\\Desktop\\camera\\src\\components\\SignUp\\Signup.js":"17","C:\\Users\\User\\Desktop\\camera\\src\\components\\PrintExample.js":"18","C:\\Users\\User\\Desktop\\camera\\src\\components\\Arrow\\Arrow.js":"19","C:\\Users\\User\\Desktop\\camera\\src\\components\\paymenVerification\\PaymentVerification.js":"20","C:\\Users\\User\\Desktop\\camera\\src\\components\\forgetPassword.js":"21","C:\\Users\\User\\Desktop\\camera\\src\\components\\Table.js":"22","C:\\Users\\User\\Desktop\\camera\\src\\components\\NavBar\\Navbar.js":"23","C:\\Users\\User\\Desktop\\camera\\src\\components\\BankDetail\\BankDetail.js":"24","C:\\Users\\User\\Desktop\\camera\\src\\components\\Image-mapper\\Mapper.js":"25"},{"size":500,"mtime":499162500000,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":265,"mtime":1611550729908,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":1185,"mtime":1615194510524,"results":"32","hashOfConfig":"30"},{"size":2388,"mtime":1615184021997,"results":"33","hashOfConfig":"30"},{"size":447,"mtime":1614075978036,"results":"34","hashOfConfig":"30"},{"size":3589,"mtime":1611901394870,"results":"35","hashOfConfig":"30"},{"size":322,"mtime":1614745430117,"results":"36","hashOfConfig":"30"},{"size":2332,"mtime":1614931950642,"results":"37","hashOfConfig":"30"},{"size":1216,"mtime":1614750681969,"results":"38","hashOfConfig":"30"},{"size":2666,"mtime":1614770828924,"results":"39","hashOfConfig":"30"},{"size":11501,"mtime":1615181802826,"results":"40","hashOfConfig":"30"},{"size":4495,"mtime":1614771822434,"results":"41","hashOfConfig":"30"},{"size":2743,"mtime":1614770919161,"results":"42","hashOfConfig":"30"},{"size":8661,"mtime":1614944431723,"results":"43","hashOfConfig":"30"},{"size":4255,"mtime":1614930395235,"results":"44","hashOfConfig":"30"},{"size":1249,"mtime":1614760775386,"results":"45","hashOfConfig":"30"},{"size":1023,"mtime":1614679360511,"results":"46","hashOfConfig":"30"},{"size":2919,"mtime":1614771038760,"results":"47","hashOfConfig":"30"},{"size":1418,"mtime":1613966838627,"results":"48","hashOfConfig":"30"},{"size":1161,"mtime":1614412613925,"results":"49","hashOfConfig":"30"},{"size":778,"mtime":1615175843278,"results":"50","hashOfConfig":"30"},{"size":7817,"mtime":1614772767657,"results":"51","hashOfConfig":"30"},{"size":2974,"mtime":1615193437871,"results":"52","hashOfConfig":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bxmda8",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"83xgq4",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"59"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"59"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"59"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"59"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"59"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"59"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"59"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"59"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\desktop\\camera\\src\\index.js",[],"C:\\Users\\User\\desktop\\camera\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\camera\\src\\index.js",[],["113","114"],"C:\\Users\\User\\Desktop\\camera\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\camera\\src\\components\\camera.js",["115"],"C:\\Users\\User\\Desktop\\camera\\src\\App.js",[],"C:\\Users\\User\\Desktop\\camera\\src\\components\\GuardedRoute.js",[],"C:\\Users\\User\\Desktop\\camera\\src\\components\\userPayment.js",["116","117","118"],"/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React,{useState} from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst userPayment = () => {\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const history = useHistory();\r\n    const  currentDateTime= Date().toLocaleString();\r\n    const [selectedDate, setSelectedDate] = useState(currentDateTime);\r\n    const [payeeName,setPayeeName] = useState(\"\");\r\n    const [bankName,setBankName] = useState(\"\");\r\n    const [amount,setAmountName] = useState(\"\");\r\n    console.log(selectedDate);\r\n\r\n        const saveUserDeatil = (e) => {\r\n            e.preventDefault();  \r\n            debugger; \r\n            const data = {\r\n                \"PayeeName\":payeeName,\r\n                \"BankName\":bankName,\r\n                \"Date\":selectedDate,\r\n                \"amount\":amount\r\n            }\r\n            const api = axios.create({\r\n                baseURL: `http://127.0.0.1:8000/api`\r\n            });\r\n            api.post('/register', data)\r\n            .then(res => {\r\n                console.log(res);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        }     \r\n\r\n    return (\r\n        <div className='section'>\r\n            <div className='form-container1'>\r\n                <div className=\"header\"><h1>Payments</h1></div>\r\n                <div className=\"control\">\r\n                    <label>Payee Name:</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"payeename\" \r\n                        name=\"payeename\" \r\n                        onChange={e => setPayeeName(e.target.value)}\r\n                        ref={register({ required: true })}\r\n                    />\r\n                     {errors.payeename && <p className=\"danger\">This payeeName is required</p>}\r\n                </div>\r\n                <div className=\"control\">\r\n                    <label>Bank Name:</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Bank Name\" \r\n                        name=\"bankname\" \r\n                        onChange={e =>setBankName(e.target.value)} \r\n                        ref={register({ required: true })}\r\n                    />\r\n                     {errors.bankname && <p className=\"danger\">This bankName is required</p>}\r\n                </div>\r\n                <div className=\"control\">\r\n                    <label>Date:</label>\r\n                    <input \r\n                            type=\"date\" \r\n                            placeholder=\"date\" \r\n                            name=\"date\" \r\n                            onChange={e => setSelectedDate(e.target.value)}\r\n                            ref={register({ required: true })}\r\n                    />\r\n                     {errors.date && <p className=\"danger\">This Date is required</p>}\r\n                </div>\r\n                <div className=\"control\">\r\n                    <label>Amount</label>\r\n                    <input \r\n                        type=\"number\" \r\n                        placeholder=\"amount\" \r\n                        name=\"amount\"\r\n                        onChange={e => setAmountName(e.target.value)}\r\n                        ref={register({ required: true })}\r\n                    />\r\n                     {errors.amount && <p className=\"danger\">This amount is required</p>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default userPayment;\r\n","C:\\Users\\User\\Desktop\\camera\\src\\components\\header.js",[],"C:\\Users\\User\\Desktop\\camera\\src\\components\\login\\Login.js",["119"],"/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React,{useState} from 'react';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './Login1.css';\r\nimport 'typeface-josefin-sans';\r\nimport DDS  from '../../images/DDS1.png';\r\nimport Header from '../header';\r\n\r\nconst login = () => {\r\n\tconst history =useHistory();\r\n\tconst [email,setEmail] = useState(\"\");\r\n\tconst [password,setPassword] = useState(\"\");\r\n\tconst [error, setError] = useState(false);\r\n\tconst handleLogin = () => {\r\n\t\tif (!email) {\r\n\t\t\tswal(\"Please Enter Email\", \"Incorrect Input\", \"warning\");\r\n\t\t\tsetError(true);\r\n\t\t\treturn;\r\n\t\t  }\r\n\t\t  if (!password || password.length < 6) {\r\n\t\t\tswal(\"Please Enter Password\", \"Incorrect Input\", \"warning\");\r\n\t\t\tsetError(true);\r\n\t\t\treturn;\r\n\t\t  }\r\n\t\t  const loginData ={\r\n\t\t\t\"email\": email,\r\n\t\t\t\"password\": password\r\n\t\t  }\r\n\r\n\t\t  const api = axios.create({\r\n\t\t\tbaseURL: `http://127.0.0.1:8000/api`\r\n\t\t  })\r\n\t\t  api.post(\"/login/\", loginData)\r\n\t\t\t.then(res => {\r\n\t\t\t  console.log(res.data.tokens);\r\n\t\t\t  const token = res.data.tokens.access;\t\r\n\t\t\t  localStorage.setItem(\"user\",token);\r\n\t\t\t  history.push(\"/payment\");\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t  swal(\"Unauthorized Access\", \"\", \"error\");\r\n\t\t\t  setError(true);\r\n\t\t\t})\r\n\t}\r\n\tconst register = () => {\r\n\t\thistory.push(\"/Signup\");\r\n\t}\r\n    return (\r\n\t\t<div className=\"container\">\r\n\t\t\t <Header />\r\n\t\t<div className=\"card\">\r\n\t\t\t<div>\r\n\t\t\t<label className=\"label\">Username</label><br/>\r\n\t\t\t<input type=\"text\" className=\"input\" value={email} onChange={e => setEmail(e.target.value)} />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"password\">\r\n\t\t\t<label className=\"label\">Password</label><br/>\r\n\t\t\t<input type=\"password\" className=\"input\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"loginbtn\">\r\n\t\t\t\t<button className=\"btn1\" type=\"submit\" onClick={handleLogin}>login</button><br/>\r\n\t\t\t\t<a href=\"/forgetPassword\" className=\"forget\">Forget password</a>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<h3 className=\"new\">new to smart.cheque?</h3>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button className=\"btn2\" type=\"submit\" onClick={register}>register here</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className=\"footer\">\r\n\t\t\t<img className=\"img\" src={DDS} alt=\"logo\" />\r\n\t\t</div>\r\n\t</div>\r\n    )\r\n}\r\n\r\nexport default login\r\n","C:\\Users\\User\\Desktop\\camera\\src\\components\\ExternalSoftware\\ExternalSoftware.js",[],"C:\\Users\\User\\Desktop\\camera\\src\\components\\Dashboard\\Dashboard.js",[],"C:\\Users\\User\\Desktop\\camera\\src\\components\\Payment\\Payment.js",["120","121","122","123"],"C:\\Users\\User\\Desktop\\camera\\src\\components\\Report\\report.js",["124","125"],"import React, { useEffect, useState } from 'react';\r\nimport './report.css';\r\nimport axios from 'axios';\r\nimport DDS from '../../images/DDS1.png';\r\nimport Navbar from '../NavBar/Navbar';\r\n\r\n\r\nconst Report = () => {\r\n    const [item,setItem] = useState([]);\r\n    const [lists, setList] = useState(item);\r\n    const [category, setCategory] = useState(\"\");\r\n    const [min, setMin] = useState(\"\");\r\n    const [max, setMax] = useState(\"\");\r\n    const [startDate,setStartDate] = useState(\"\");\r\n    const [endDate,setEndDate] = useState(\"\");\r\n    const token = localStorage.getItem('user');\r\n    const api = axios.create({\r\n        baseURL: `http://127.0.0.1:8000/api`\r\n    })\r\n\r\n    //e = event for the value when select changes\r\n    const handleFilterChange = (e, filterType) => {\r\n        //changes state \r\n        switch (filterType) {\r\n            case \"category\":\r\n                setCategory(e.target.value);\r\n                break;\r\n            case \"min\":\r\n                setMin(e.target.value);\r\n                break;\r\n            case \"max\":\r\n                setMax(e.target.value);\r\n                break;\r\n            case \"startDate\":\r\n                setStartDate(e.target.value);\r\n                break;\r\n            case \"endDate\":\r\n                setEndDate(e.target.value);   \r\n            default: break;\r\n        }\r\n    }\r\n  \r\n   useEffect(() => {\r\n        const GetList = async () => {\r\n        const  items =await  api.get('/payment/', {\r\n                headers: {\r\n                    Authorization: ` Bearer ${token}`,\r\n                }\r\n            })\r\n            console.log(items.data);\r\n             setItem(items.data);\r\n        }\r\n        GetList();\r\n    },[])\r\n useEffect(() => {\r\n    let filteredProducts = item;\r\n    if(category !== \"\"){\r\n        filteredProducts = filteredProducts.filter(list =>\r\n            list.pymnt_nm.toLowerCase().includes(category.toLowerCase()))\r\n    }\r\n    if(min !== \"\"){\r\n        filteredProducts = filteredProducts.filter(list =>\r\n            list.pymnt_chq_amt > min)\r\n    }\r\n    if(max !== \"\"){\r\n        filteredProducts = filteredProducts.filter(list =>\r\n            list.pymnt_chq_amt < max)\r\n    }\r\n    if(startDate !== \"\"){\r\n        filteredProducts = filteredProducts.filter(list => \r\n            list.pymnt_chq_dt.includes(startDate))\r\n    }\r\n    setList(filteredProducts);\r\n    },[item,category ,min, max,startDate,endDate])\r\n    \r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className=\"table-list\">\r\n                <div><h2>reports</h2></div>\r\n                <div className=\"filter-card\">\r\n                    <div>date range<input type=\"text\" className=\"date-input\" onChange={(e) => handleFilterChange(e, \"startDate\")} /><input type=\"text\" className=\"date-input\"  onChange={(e) => handleFilterChange(e, \"endDate\")} /></div>\r\n                    <div>payee name<input type=\"text\" className=\"date-input\"  onChange={(e) => handleFilterChange(e, \"category\")}/></div>\r\n                    <div>amt range<input type=\"text\" className=\"date-input\" onChange={(e) => handleFilterChange(e, \"min\")}/><input type=\"text\" className=\"date-input\" onChange={(e) => handleFilterChange(e, \"max\")} /></div>\r\n                </div>\r\n                <div>\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>payee name</th>\r\n                                <th>bank name</th>\r\n                                <th>payee a/c no.</th>\r\n                                <th>cheque date</th>\r\n                                <th>cheque amt</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {lists.map(list =>\r\n                                <tr key={list.pymnt_id}>\r\n                                    <td>{list.pymnt_nm}</td>\r\n                                    <td>hdfc</td>\r\n                                    <td>{list.pymnt_ac_no}</td>\r\n                                    <td>{list.pymnt_chq_dt}</td>\r\n                                    <td>{list.pymnt_chq_amt}</td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div className=\"footerorg\">\r\n                <img className=\"img\" src={DDS} alt=\"logo\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Report\r\n","C:\\Users\\User\\Desktop\\camera\\src\\components\\Print\\Print.js",["126"],"import axios from 'axios';\r\nimport React, { useEffect,useState } from 'react';\r\nimport './print.css';\r\nimport Arrow from '../Arrow/Arrow';\r\nimport DDS from '../../images/DDS1.png';\r\nimport Navbar from '../NavBar/Navbar'\r\n\r\nconst Print = () => {\r\n    const [paymentList, setPaymentList] = useState([]);\r\n    const token = localStorage.getItem('user');\r\n    const api = axios.create({\r\n        baseURL: `http://127.0.0.1:8000/api`\r\n    })\r\n    useEffect(() => {\r\n        const GetData = async () => {\r\n            const list = await api.get(\"/pyamentlist/\", {\r\n                headers: {\r\n                    Authorization: ` Bearer ${token}`,\r\n                }\r\n            })\r\n            setPaymentList(list.data);\r\n            console.log(list.data);\r\n        }\r\n        GetData();\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className=\"print-card\">\r\n                <div><h2 className=\"step-title\">print cheque</h2></div>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>payee name</th>\r\n                            <th>bank name</th>  \r\n                            <th>cheque date</th>\r\n                            <th>check amount</th>\r\n                            <th>select for print</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {paymentList.map(item =>\r\n                                 <tr key={item.pymnt_id}>\r\n                                 <td>{item.pymnt_nm}</td>\r\n                                 <td>{item.bnk_nm}</td>\r\n                                 <td>{item.pymnt_chq_dt}</td>\r\n                                 <td>{item.pymnt_chq_amt}</td>\r\n                                 <td><input type=\"checkbox\" name=\"print\" /></td>\r\n                             </tr>\r\n                            )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"step\">\r\n                <div className=\"stepone\">\r\n                    <h2 className=\"step-title\">step one</h2>\r\n                    <h4 className=\"step-content\">place the cheque in this way</h4>\r\n                    <Arrow /><br />\r\n                    <button type=\"submit\" className=\"btn1\"><a href=\"/printers\">print</a></button>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"stepthree\">\r\n                <button type=\"submit\" className=\"btn2\"><a href=\"/verification\">verify payment</a></button>\r\n            </div>\r\n            <div className=\"printfooter\">\r\n                <img className=\"img\" src={DDS} alt=\"logo\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Print\r\n","C:\\Users\\User\\Desktop\\camera\\src\\components\\organization\\organization.js",["127","128","129","130"],"/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useState, useEffect, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport Header from '../header';\r\nimport swal from 'sweetalert';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './organization.css';\r\nimport DDS from '../../images/DDS1.png';\r\n\r\nconst organization = () => {\r\n    const history = useHistory();\r\n    const [orgName, setOrgName] = useState(\"\");\r\n    const [orgEmail, setOrgEmail] = useState(\"\");\r\n    const [orgMobile, setOrgMobile] = useState();\r\n    const [ids, setIds] = useState();\r\n    const [error, setError] = useState(false);\r\n    const [orgList, setOrgList] = useState([]);\r\n    const [bankList, setBankList] = useState([]);\r\n    const [editing, setEditing] = useState(false)\r\n    const orgdata = {\r\n        \"orgn_nm\": orgName,\r\n        \"orgn_email\": orgEmail,\r\n        \"orgn_mobile\": orgMobile,\r\n    }\r\n    const SaveOrg = () => {\r\n        setEditing(false)\r\n        if (!orgName) {\r\n            swal(\"Please Enter Organization Name\", \"Incorrect Input\", \"warning\");\r\n            setError(true);\r\n            return;\r\n        }\r\n        if (!orgEmail) {\r\n            swal(\"Please Enter Organization Email\", \"Incorrect Input\", \"warning\");\r\n            setError(true);\r\n            return;\r\n        }\r\n        if (!orgMobile) {\r\n            swal(\"Please Enter Mobile Number\", \"Incorrect Input\", \"warning\");\r\n            setError(true);\r\n            return;\r\n        }\r\n        const token = localStorage.getItem('user');\r\n        console.log(token);\r\n        const api = axios.create({\r\n            baseURL: `http://127.0.0.1:8000/api`\r\n        })\r\n        api.post('/org/', orgdata, {\r\n            headers: {\r\n                Authorization: ` Bearer ${token}`,\r\n            }\r\n        })\r\n            .then((res) => {\r\n                clear();\r\n                history.push(\"/bank\");\r\n                if (token) {\r\n                    console.log(res.data);\r\n                }\r\n\r\n            }).catch((error) => {\r\n                swal(\"Unauthorized Access\", \"\", \"error\");\r\n                console.log(error);\r\n                console.log(orgdata);\r\n            })\r\n    }\r\n    const deletUser = (id) => {\r\n        setEditing(false)\r\n        const token = localStorage.getItem('user');\r\n        console.log(token);\r\n        const api = axios.create({\r\n            baseURL: `http://127.0.0.1:8000/api`\r\n        })\r\n\r\n        api.delete(`/org/${id}`, {\r\n            headers: {\r\n                Authorization: ` Bearer ${token}`,\r\n            }\r\n        })\r\n            .then(result => {\r\n                console.log(result);\r\n                history.push(\"/organization\");\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n    const updateUser = (id) => {\r\n        setIds(id);\r\n        setEditing(true);\r\n        const token = localStorage.getItem('user');\r\n        const api = axios.create({\r\n            baseURL: `http://127.0.0.1:8000/api`\r\n        })\r\n        api.get(`/org/${id}`, {\r\n            headers: {\r\n                Authorization: ` Bearer ${token}`,\r\n            }\r\n        })\r\n            .then(res => {\r\n                console.log(res.data);\r\n                setOrgName(res.data.orgn_nm);\r\n                setOrgEmail(res.data.orgn_email);\r\n                setOrgMobile(res.data.orgn_mobile);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n    const editUser = () => {\r\n        const id = ids;\r\n        const token = localStorage.getItem('user');\r\n        const api = axios.create({\r\n            baseURL: `http://127.0.0.1:8000/api`\r\n        })\r\n        api.put(`/org/${id}/`, orgdata, {\r\n            headers: {\r\n                Authorization: ` Bearer ${token}`,\r\n            }\r\n        })\r\n            .then(res => {\r\n                clear();\r\n                swal(\"Good job!\", \"You record is updated\", \"success\");\r\n                console.log(res.data);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        const GetData = async () => {\r\n            const token = localStorage.getItem('user');\r\n            console.log(token);\r\n            const api = axios.create({\r\n                baseURL: `http://127.0.0.1:8000/api`\r\n            })\r\n            const result = await api.get('/org/', {\r\n                headers: {\r\n                    Authorization: ` Bearer ${token}`,\r\n                }\r\n            });\r\n            console.log(result.data);\r\n            setOrgList(result.data);\r\n           {/**  const result1= await api.get('/masterbanklist/');\r\n            console.log(result1.data);\r\n            setBankList(result1.data);\r\n            */}\r\n        };\r\n        \r\n        GetData();\r\n    }, [])\r\n    const clear = () => {\r\n        setOrgName(\"\");\r\n        setOrgEmail(\"\");\r\n        setOrgMobile(\"\");\r\n       \r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <Header />\r\n            <div className=\"orgmain\">\r\n                <div className=\"orgheader\"><h3>register organization</h3></div>\r\n                <div>\r\n                    <label className=\"label\">organization name</label><br />\r\n                    <input type=\"text\" className=\"input\" value={orgName} onChange={(e) => setOrgName(e.target.value)} />\r\n                </div>\r\n                <div className=\"alingment\">\r\n                    <label className=\"label\">email id</label><br />\r\n                    <input type=\"text\" className=\"input\" value={orgEmail} onChange={e => setOrgEmail(e.target.value)} />\r\n                </div>\r\n                <div className=\"alingment\">\r\n                    <label className=\"label\">mobile number</label><br />\r\n                    <input type=\"text\" className=\"input\" value={orgMobile} onChange={e => setOrgMobile(e.target.value)} />\r\n                </div>\r\n                <div className=\"buttondiv\">\r\n                    {editing ? (\r\n                        <Fragment>\r\n                            <button className=\"btnsave\" type=\"submit\" onClick={editUser} >update</button>\r\n                        </Fragment>\r\n                    ) : (\r\n                            <Fragment>\r\n                                <button className=\"btnsave\" type=\"submit\" onClick={SaveOrg} >save</button>\r\n                                <button className=\"btnsave\" type=\"submit\" onClick={clear} >cancel</button>\r\n                            </Fragment>\r\n                        )}\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"sync\">\r\n                <p>would you like to sync with accounting software?</p>\r\n                <div className=\"buttondiv\">\r\n                    <button className=\"btnsave\" type=\"submit\" ><a href=\"/external\">next</a></button>\r\n                    <button className=\"btnsave\" type=\"submit\" >cancel</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"sync1\">\r\n                <div><h2>Organization list</h2></div>\r\n                <table className=\"ortableg-\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>organization name</th>\r\n                            <th>email id</th>\r\n                            <th>mobile number</th>\r\n                            <th>Edit</th>\r\n                            <th>Del</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orgList.length > 0 ? (\r\n                            orgList.map(user => (\r\n                                <tr key={user.orgn_id}>\r\n                                    <td>{user.orgn_nm}</td>\r\n                                    <td>{user.orgn_email}</td>\r\n                                    <td>{user.orgn_mobile}</td>\r\n                                    <td><i onClick={() => { updateUser(user.orgn_id) }} className=\"fa fa-pencil \" aria-hidden=\"true\"></i></td>\r\n                                    <td><i onClick={() => { deletUser(user.orgn_id) }} className=\"fa fa-trash-o\" aria-hidden=\"true\"></i></td>\r\n                                </tr>\r\n                            ))\r\n                        ) : (\r\n                                <tr>\r\n                                    <td colSpan={3}>No users</td>\r\n                                </tr>\r\n                            )}\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"footerorg\">\r\n                <img className=\"img\" src={DDS} alt=\"logo\" />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default organization\r\n","C:\\Users\\User\\Desktop\\camera\\src\\components\\SignUp\\Signup.js",["131","132","133","134"],"import React,{useState,useRef,useEffect} from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport Header from '../header';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './signup.css';\r\nimport DDS  from '../../images/DDS1.png';\r\n\r\n\r\nconst Signup = () => {\r\n\tconst history = useHistory();\r\n\tconst {  handleSubmit } = useForm();\t\r\n\tlet userRef = useRef('');\r\n\tlet emailRef = useRef('');\r\n\tlet mobileRef =useRef('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [mobile, setMobile] = useState();\r\n    const [user, setUser] = useState('');\r\n    const [confirmPwd, setConfirmPwd] = useState();\r\n\tconst [error,setError] = useState(false);\r\n\tconst handleSignUp = () => {\r\n\t\tif(!user){\r\n\t\t\tswal(\"Please Enter username\", \"Incorrect Input\", \"warning\");\r\n\t\t\tsetError(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!email) {\r\n\t\t\tswal(\"Please Enter Email\", \"Incorrect Input\", \"warning\");\r\n\t\t\tsetError(true);\r\n\t\t\treturn;\r\n\t\t  }\r\n\t\t  if(!mobile){\r\n\t\t\tswal(\"Please Enter Mobile Number\", \"Incorrect Input\", \"warning\");\r\n\t\t\tsetError(true);\r\n\t\t\treturn;\r\n\t\t  }\r\n\t\t  if (!password || password.length < 6) {\r\n\t\t\tswal(\"Please Enter Password\", \"Incorrect Input\", \"warning\");\r\n\t\t\tsetError(true);\r\n\t\t\treturn;\r\n\t\t  }\r\n\t\t if (!confirmPwd || confirmPwd.length < 6) {\r\n\t\t\tswal(\"Please Enter confirm Password\", \"Incorrect Input\", \"warning\");\r\n\t\t\tsetError(true);\r\n\t\t\treturn;\r\n\t\t  }\r\n\t\t \r\n        if(password !== confirmPwd){\r\n            swal(\"password is not matching\",\"\",\"warning\");\r\n            setError(true);\r\n            return;\r\n\t\t}\r\n        const signupData = {\r\n           \"name\":user,\r\n\t\t\t\"email\":email,\r\n\t\t\t\"mobile\":mobile,\r\n\t\t\t\"password\":password\r\n        }\r\n        const api = axios.create({\r\n            baseURL: `http://127.0.0.1:8000/api`\r\n        });\r\n\t\tconst emailverify = () => {\r\n            api.get('/email-verify/').then(res =>\r\n              localStorage.setItem('user')\r\n             )}\r\n\t\tapi.post('/register/',signupData)\r\n            .then(res => {\r\n\t\t\t\thistory.push(\"/login\");\r\n\t\t\t\tconsole.log(res.data);\r\n            })\r\n            .catch(error => {\r\n\t\t\t\tconsole.log(error);\r\n                swal(\"Email Already registered\", \"\", \"error\");\r\n            })\r\n\t}\r\n\tconst clear =function(){\r\n\t\tuserRef.current.value ='';\r\n\t\temailRef.current.value='';\r\n\t\tmobileRef.current.value='';\r\n\t}\r\n\t\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n           <Header />\r\n        <div className=\"cardsignup\">\r\n\t\t<div className=\"signheader\"><h3>user organization</h3></div>\r\n\t\t\t<div>\r\n\t\t\t<label className=\"label\">user name</label><br/>\r\n\t\t\t<input \r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"input\"\t\t\r\n\t\t\t\t\tname=\"user\"\t\t\t\r\n\t\t\t\t\tonChange={(e) => setUser(e.target.value)} \r\n\t\t\t\t\tref={userRef}\r\n\t\t\t\t\t/>\t\t\t\r\n\t\t\t</div>\r\n            <div className=\"password\">\r\n\t\t\t<label className=\"label\">email id</label><br/>\r\n\t\t\t<input \r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\tclassName=\"input\" \r\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)} \r\n\t\t\t\t\tref={emailRef}\r\n\t\t\t\t/>\r\n\t\t\t\t\t\r\n\t\t\t</div>\r\n            <div className=\"password\">\r\n\t\t\t<label className=\"label\">mobile number</label><br/>\r\n\t\t\t<input \r\n\t\t\t\t\ttype=\"number\"\t\t\r\n\t\t\t\t\tclassName=\"input\"\t\r\n\t\t\t\t\tname=\"mobile\"\r\n\t\t\t\t\tonChange={(e) => setMobile(Number(e.target.value))}\r\n\t\t\t\t\tref={mobileRef}\r\n\t\t\t\t />\r\n\t\t\t</div>\r\n            <div className=\"password\">\r\n\t\t\t<label className=\"label\">enter password</label><br/>\r\n\t\t\t<input \r\n\t\t\t\t\ttype=\"password\"\t\r\n\t\t\t\t\tclassName=\"input\"\r\n\t\t\t\t\tname=\"password\"\t\t\t\t\r\n\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"password\">\r\n\t\t\t<label className=\"label\">confirm password</label><br/>\r\n\t\t\t<input \r\n\t\t\t\ttype=\"password\"\r\n\t\t\t\tname=\"confpassword\"\r\n\t\t\t\tclassName=\"input\"\r\n\t\t\t\tonChange={(e) => setConfirmPwd(e.target.value)} \r\n\t\t\t\t/>\r\n\t\t\t</div>\t\r\n\t\t\t<div className=\"buttondiv\">\r\n            <button className=\"btnsave\" type=\"submit\" onClick={handleSignUp} >save</button>\r\n            <button  className=\"btnsave\" type=\"submit\" onClick={clear}>clear</button>\r\n            </div>\r\n\t\t</div>\r\n        <div className=\"footer1\">\r\n\t\t\t<img className=\"img\" src={DDS} alt=\"logo\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","C:\\Users\\User\\Desktop\\camera\\src\\components\\PrintExample.js",["135"],"import React,{ useRef } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport print from '../images/print.png';\r\n\r\nclass ComponentToPrint extends React.PureComponent {\r\n    \r\n    render() {\r\n      return (\r\n        <div>\r\n        <div  style={{width:'8.34cm',height:'4.31cm'}}>\r\n            <img src={print} alt=\"print\" />\r\n        </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\nconst PrintExample = () => {\r\n    const componentRef = useRef();\r\n    const pageStyle = `\r\n  @page {\r\n    size:203.2mm 93.13mm landscape !important;\r\n    margin:0;\r\n    -webkit-print-color-adjust: exact;\r\n  }\r\n\r\n  @media print {\r\n    html, body {\r\n      height: initial !important;\r\n      overflow: initial !important;\r\n    }\r\n  }\r\n \r\n\r\n`;\r\n    return(\r\n        <div>\r\n           <div>\r\n           <a href=\"/camera\"><i className=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></a>\r\n          </div>\r\n            <ReactToPrint \r\n                trigger={() => <button style={{marginLeft:'50px'}}>Print this out!</button>}\r\n                content={() => componentRef.current}\r\n               pageStyle={pageStyle}\r\n                \r\n            />\r\n               <ComponentToPrint ref={componentRef}  />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PrintExample","C:\\Users\\User\\Desktop\\camera\\src\\components\\Arrow\\Arrow.js",[],"C:\\Users\\User\\Desktop\\camera\\src\\components\\paymenVerification\\PaymentVerification.js",["136","137","138"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport DDS from '../../images/DDS1.png';\r\nimport './paymentver.css';\r\nimport axios from 'axios';\r\nimport Navbar from '../NavBar/Navbar';\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\n\r\nconst PaymentVerification = () => {\r\n    const [checked, setChecked] = useState(false);\r\n    const [paymentList, setPaymentList] = useState([]);\r\n    const token = localStorage.getItem('user');\r\n    const api = axios.create({\r\n        baseURL: `http://127.0.0.1:8000/api`\r\n    })\r\n    let btnRef = useRef();\r\n\r\n    const onBtnClick = e => {\r\n        if (btnRef.current) {\r\n            btnRef.current.setAttribute(\"disabled\", \"disabled\");\r\n            setChecked(true);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        const GetData = async () => {\r\n            const list = await api.get(\"/pyamentlist/\", {\r\n                headers: {\r\n                    Authorization: ` Bearer ${token}`,\r\n                }\r\n            })\r\n            setPaymentList(list.data);\r\n            console.log(list.data);\r\n        }\r\n        GetData();\r\n    }, []);\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <Navbar />\r\n            <div className=\"table-list\">\r\n                <div><h4 className=\"pending\">payment verification</h4></div>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>payee name</th>\r\n                            <th>bank name</th>\r\n                            <th>cheque date</th>\r\n                            <th>cheque amt</th>\r\n                            <th>cheque No</th>\r\n                            <th>Verify</th>\r\n                            <th>Mail</th>\r\n                            <th>CSV</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {paymentList.map(item =>\r\n                            <tr key={item.pymnt_id}>\r\n                                <td>{item.pymnt_nm}</td>\r\n                                <td>{item.bnk_nm}</td>\r\n                                <td>{item.pymnt_chq_dt}</td>\r\n                                <td>{item.pymnt_chq_amt}</td>\r\n                                <td>{item.pymnt_ac_no}</td>\r\n                                <td><input type=\"checkbox\" name=\"checked\" ref={btnRef} onChange={onBtnClick} /></td>\r\n                                <td><input type=\"checkbox\" name=\"mail\" disabled={!checked} /></td>\r\n                                <td><input type=\"checkbox\" name=\"cms\" disabled={!checked}  /></td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"verificationfooter\">\r\n                <img className=\"img\" src={DDS} alt=\"logo\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentVerification\r\n","C:\\Users\\User\\Desktop\\camera\\src\\components\\forgetPassword.js",[],"C:\\Users\\User\\Desktop\\camera\\src\\components\\Table.js",[],"C:\\Users\\User\\Desktop\\camera\\src\\components\\NavBar\\Navbar.js",["139","140"],"C:\\Users\\User\\Desktop\\camera\\src\\components\\BankDetail\\BankDetail.js",["141","142"],"import React, { useState, useEffect, Fragment } from 'react';\r\nimport Navbar from '../NavBar/Navbar';\r\nimport axios from 'axios';\r\nimport './BankDetail.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport swal from 'sweetalert';\r\nimport DDS from '../../images/DDS1.png';\r\n\r\nconst BankDetail = () => {\r\n    const history = useHistory();\r\n    const [bankEmail, setBankEmail] = useState('');\r\n    const [org, setOrg] = useState('');\r\n    const [bank, setBank] = useState('');\r\n    const [orglist, setOrgList] = useState([]);\r\n    const [bankList, setBankList] = useState([]);\r\n    const [userbnkList, setUserbnkList] = useState([]);\r\n    const [editing, setEditing] = useState(false);\r\n    const [ids, setIds] = useState();\r\n    const BankData = {\r\n        \"orgn_id\": org,\r\n        \"masterbank_id\": bank,\r\n        \"bnk_msg_to\": bankEmail\r\n    }\r\n    const token = localStorage.getItem('user');\r\n    const api = axios.create({\r\n        baseURL: `http://127.0.0.1:8000/api`\r\n    })\r\n    useEffect(() => {\r\n        const GetList = async () => {\r\n            const result = await api.get(\"/orglist/\", {\r\n                headers: {\r\n                    Authorization: ` Bearer ${token}`,\r\n                }\r\n            })\r\n            setOrgList(result.data);\r\n\r\n            const list = await api.get(\"/mstbnklist/\", {\r\n                headers: {\r\n                    Authorization: ` Bearer ${token}`,\r\n                }\r\n            })\r\n            setBankList(list.data);\r\n            console.log(list.data);\r\n\r\n            const banklist = await api.get('/alldata/', {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            })\r\n            console.log(banklist.data);\r\n            setUserbnkList(banklist.data)\r\n        }\r\n\r\n        GetList();\r\n    }, []);\r\n\r\n    const SaveBankDetail = () => {\r\n        if(!org){\r\n            swal(\"Please Enter Org Name\", \"Incorrect Input\", \"warning\");\r\n            return;\r\n        }\r\n        if(!bank){\r\n            swal(\"Please Enter bank Name\", \"Incorrect Input\", \"warning\");\r\n            return;\r\n        }\r\n        api.post('/savebank/', BankData, {\r\n            headers: {\r\n                Authorization: ` Bearer ${token}`,\r\n            }\r\n        })\r\n            .then(res => {\r\n                history.push(\"/login\");\r\n                console.log(res.data)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const DeleteBank = (id) => {\r\n        setEditing(false)\r\n        api.delete(`/savebank/${id}`,{\r\n            headers: {\r\n                Authorization: ` Bearer ${token}`,\r\n            } \r\n        })\r\n        .then(res => {\r\n           swal(\"your data is successfully deleted\",\"\",\"success\")\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const edit = (id) => {\r\n        setIds(id);\r\n        setEditing(true);\r\n        api.get(`/savebank${id}`,{\r\n            headers: {\r\n                Authorization: ` Bearer ${token}`,\r\n            } \r\n        })\r\n        .then(res => {\r\n            setOrg(res.data.org);\r\n            setBank(res.data.bank);\r\n            setBankEmail(res.data.bankEmail);\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n\r\n    }\r\n\r\n    const Update = () => {\r\n        const id = ids;\r\n        api.put(`/savebank/${id}`,{\r\n            headers: {\r\n                Authorization: ` Bearer ${token}`,\r\n            }  \r\n        })\r\n        .then(res => {\r\n            console.log(res);\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <Navbar />\r\n            <div className=\"bank-card\">\r\n                <div><h2>Bank Detail</h2></div>\r\n                <div>\r\n                    <label className='payment-detail'>select organization</label><br />\r\n                    <select className=\"select\" value={org} onChange={e => setOrg(e.target.value)}>\r\n                        <option>Choose an option</option>\r\n                        {orglist.map(item =>\r\n                            <option key={item.orgn_id} value={item.orgn_id} label={item.orgn_nm}></option>\r\n                        )}\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label className='payment-detail'>select bank</label><br />\r\n                    <select className=\"select bank\" value={bank} onChange={e => setBank(e.target.value)}>\r\n                        <option>Choose an option</option>\r\n                        {bankList.map(item =>\r\n                            <option key={item.mstbnk_id} value={item.mstbnk_id} label={item.mstbnk_nm}></option>\r\n                        )}\r\n                    </select>\r\n                    <i className=\"fa fa-question-circle add\" aria-hidden=\"true\" data-tip data-for=\"registerTip\"></i>\r\n                    <ReactTooltip id=\"registerTip\" place=\"top\" effect=\"solid\" type=\"light\">\r\n                      if bank Name is not listed.Contact Us\r\n                     </ReactTooltip>\r\n                </div>\r\n                <div>\r\n                    <label className='payment-detail'>email</label><br />\r\n                    <input type=\"email\" className=\"input\" onChange={e => setBankEmail(e.target.value)} />\r\n                </div>\r\n                <div>\r\n                    {editing ? (\r\n\r\n                        <div className=\"paybtn\">\r\n                            <button className=\"btn1\" onChange={Update} >update</button>\r\n                        </div>\r\n                    ) : (\r\n                            <div className=\"paybtn\">\r\n                                <button className=\"btn1\" onClick={SaveBankDetail}>Save</button>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            </div>\r\n            <div className=\"bank-table\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>organization name</th>\r\n                            <th>bank name</th>\r\n                            <th>email id</th>\r\n                            <th>Edit</th>\r\n                            <th>Del</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {userbnkList.map(item =>\r\n                            <tr key={item.bnk_id}>\r\n                                <td>{item.orgn_nm}</td>\r\n                                <td>{item.mstbnk_nm}</td>\r\n                                <td>{item.bnk_msg_to}</td>\r\n                                <td><i className=\"fa fa-pencil\" aria-hidden=\"true\" data-tip data-for=\"editTip\" onClick={() => edit(item.bnk_id)}></i>\r\n                                <ReactTooltip id=\"editTip\" place=\"top\" effect=\"solid\" type=\"light\">\r\n                     edit\r\n                     </ReactTooltip>\r\n                                </td>\r\n                                <td><i className=\"fa fa-trash-o\" aria-hidden=\"true\" data-tip data-for=\"deleteTip\" onClick={() => {DeleteBank(item.bnk_id)}}></i>\r\n                                <ReactTooltip id=\"deleteTip\" place=\"top\" effect=\"solid\" type=\"light\">\r\n                     delete\r\n                     </ReactTooltip>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                        }\r\n                        <tr>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"footerbank\">\r\n                <img className=\"img\" src={DDS} alt=\"logo\" />\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BankDetail;\r\n","C:\\Users\\User\\Desktop\\camera\\src\\components\\Image-mapper\\Mapper.js",["143","144"],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":17},{"ruleId":"149","severity":1,"message":"153","line":8,"column":23,"nodeType":"151","messageId":"152","endLine":8,"endColumn":35},{"ruleId":"149","severity":1,"message":"154","line":9,"column":11,"nodeType":"151","messageId":"152","endLine":9,"endColumn":18},{"ruleId":"149","severity":1,"message":"155","line":17,"column":15,"nodeType":"151","messageId":"152","endLine":17,"endColumn":29},{"ruleId":"149","severity":1,"message":"156","line":15,"column":9,"nodeType":"151","messageId":"152","endLine":15,"endColumn":14},{"ruleId":"149","severity":1,"message":"157","line":14,"column":11,"nodeType":"151","messageId":"152","endLine":14,"endColumn":15},{"ruleId":"158","severity":1,"message":"159","line":69,"column":8,"nodeType":"160","endLine":69,"endColumn":10,"suggestions":"161"},{"ruleId":"149","severity":1,"message":"162","line":164,"column":11,"nodeType":"151","messageId":"152","endLine":164,"endColumn":17},{"ruleId":"149","severity":1,"message":"163","line":188,"column":11,"nodeType":"151","messageId":"152","endLine":188,"endColumn":17},{"ruleId":"164","severity":1,"message":"165","line":39,"column":13,"nodeType":"166","messageId":"167","endLine":39,"endColumn":28},{"ruleId":"158","severity":1,"message":"168","line":54,"column":7,"nodeType":"160","endLine":54,"endColumn":9,"suggestions":"169"},{"ruleId":"158","severity":1,"message":"168","line":25,"column":8,"nodeType":"160","endLine":25,"endColumn":10,"suggestions":"170"},{"ruleId":"149","severity":1,"message":"156","line":16,"column":12,"nodeType":"151","messageId":"152","endLine":16,"endColumn":17},{"ruleId":"149","severity":1,"message":"171","line":18,"column":12,"nodeType":"151","messageId":"152","endLine":18,"endColumn":20},{"ruleId":"149","severity":1,"message":"172","line":18,"column":22,"nodeType":"151","messageId":"152","endLine":18,"endColumn":33},{"ruleId":"173","severity":1,"message":"174","line":142,"column":12,"nodeType":"175","messageId":"176","endLine":145,"endColumn":16},{"ruleId":"149","severity":1,"message":"177","line":1,"column":31,"nodeType":"151","messageId":"152","endLine":1,"endColumn":40},{"ruleId":"149","severity":1,"message":"153","line":13,"column":11,"nodeType":"151","messageId":"152","endLine":13,"endColumn":23},{"ruleId":"149","severity":1,"message":"156","line":22,"column":9,"nodeType":"151","messageId":"152","endLine":22,"endColumn":14},{"ruleId":"149","severity":1,"message":"178","line":64,"column":9,"nodeType":"151","messageId":"152","endLine":64,"endColumn":20},{"ruleId":"179","severity":1,"message":"180","line":40,"column":12,"nodeType":"181","endLine":40,"endColumn":30},{"ruleId":"149","severity":1,"message":"182","line":6,"column":10,"nodeType":"151","messageId":"152","endLine":6,"endColumn":17},{"ruleId":"149","severity":1,"message":"183","line":6,"column":19,"nodeType":"151","messageId":"152","endLine":6,"endColumn":30},{"ruleId":"158","severity":1,"message":"168","line":34,"column":8,"nodeType":"160","endLine":34,"endColumn":10,"suggestions":"184"},{"ruleId":"185","severity":1,"message":"186","line":23,"column":9,"nodeType":"181","endLine":23,"endColumn":48},{"ruleId":"185","severity":1,"message":"186","line":24,"column":9,"nodeType":"181","endLine":24,"endColumn":43},{"ruleId":"149","severity":1,"message":"187","line":1,"column":38,"nodeType":"151","messageId":"152","endLine":1,"endColumn":46},{"ruleId":"158","severity":1,"message":"168","line":56,"column":8,"nodeType":"160","endLine":56,"endColumn":10,"suggestions":"188"},{"ruleId":"149","severity":1,"message":"189","line":1,"column":10,"nodeType":"151","messageId":"152","endLine":1,"endColumn":16},{"ruleId":"145","severity":1,"message":"190","line":13,"column":3,"nodeType":"151","messageId":"191","endLine":13,"endColumn":6},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"no-unused-vars","'ReactCrop' is defined but never used.","Identifier","unusedVar","'handleSubmit' is assigned a value but never used.","'history' is assigned a value but never used.","'saveUserDeatil' is assigned a value but never used.","'error' is assigned a value but never used.","'date' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'api', 'history', and 'token'. Either include them or remove the dependency array.","ArrayExpression",["194"],"'update' is assigned a value but never used.","'submit' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","React Hook useEffect has missing dependencies: 'api' and 'token'. Either include them or remove the dependency array.",["195"],["196"],"'bankList' is assigned a value but never used.","'setBankList' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useEffect' is defined but never used.","'emailverify' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'CSVLink' is defined but never used.","'CSVDownload' is defined but never used.",["197"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Fragment' is defined but never used.",["198"],"'render' is defined but never used.","Read-only global 'URL' should not be modified.","nativeReassign","no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"201","fix":"203"},{"desc":"201","fix":"204"},{"desc":"201","fix":"205"},"Update the dependencies array to be: [api, history, token]",{"range":"206","text":"207"},"Update the dependencies array to be: [api, token]",{"range":"208","text":"209"},{"range":"210","text":"209"},{"range":"211","text":"209"},{"range":"212","text":"209"},[2581,2583],"[api, history, token]",[1687,1689],"[api, token]",[793,795],[1095,1097],[1862,1864]]